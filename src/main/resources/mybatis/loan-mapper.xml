<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.LoanMapper">
    <!-- 대출 기록 생성 -->
    <insert id="createLoan">
        INSERT INTO loan(id, loan_date, return_date, status, loan.user_id, book_isbn, original_price, discount_price, final_price, imp_uid)
        VALUES (DEFAULT, DEFAULT, DATE_ADD(NOW(), INTERVAL 7 DAY), '대출 중', #{userId}, #{bookIsbn}, #{originalPrice}, #{discountPrice}, #{finalPrice}, #{impUid})
    </insert>
    <!-- 사용자의 모든 대출 기록 조회 -->
    <select id="getLoansByUserId" resultType="LoanDTO">
        SELECT
            a.*,
            b.*
        FROM
            loan AS a
                JOIN
            book AS b
            ON
                a.book_isbn = b.isbn
        WHERE
            a.user_id = #{userId}
    </select>
    <!-- 한 사람이 대출 할 수 있는 횟수 -->
    <select id="getActiveLoanCountByUserId" resultType="java.lang.Integer">
        SELECt COUNT(*)
        FROM loan
        WHERE user_id = #{userId} AND status = '대출 중'
    </select>
    <!-- 대출 가능한 책 재고 확인 -->
    <select id="getAvailableCopies" resultType="java.lang.Integer">
        SELECt book.copies_available
        FROM book
        WHERE isbn = #{bookIsbn}
    </select>
    <!-- 책 재고 감소 -->
    <update id="decreaseCopiesAvailable">
        UPDATE book
        SET copies_available = book.copies_available - 1
        WHERE isbn = #{bookIsbn} AND book.copies_available > 0
    </update>
    <!-- 사용자 id로 대출중인 책 반환 -->
    <select id="getActiveLoanByUserAndBook" resultType="LoanDTO">
        SELECT * FROM loan WHERE user_id = #{userId}
        AND status = '대출 중'
    </select>
    <!-- 책의 대출 가능 복사본이 0일 때, 첫 번째 대출자의 반납일 조회 -->
    <select id="getFirstReturnDateByBookIsbn" resultType="java.time.LocalDateTime">
        SELECT l.return_date
        FROM loan l
                 JOIN book b ON l.book_isbn = b.isbn
        WHERE b.isbn = #{isbn}
          AND b.copies_available = 0
        ORDER BY l.return_date DESC
        LIMIT 1
    </select>
    <select id="getUserPoints" resultType="java.lang.Integer">
        SELECT point FROM user WHERE id = #{userId}
    </select>
    <update id="deductUserPoints">
        UPDATE user
        SET point = point - #{points}
        WHERE id = #{userId} AND point >= #{points}
    </update>
    <delete id="returnBook">
        DELETE FROM loan WHERE book_isbn = #{bookIsbn} AND user_id = #{userId}
    </delete>
</mapper>
