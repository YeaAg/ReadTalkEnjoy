CI=

spring.application.name=Project
### 스프링이 정적 파일을 찾을 때의 기본 경로를 재설정
spring.mvc.static-path-pattern=/static/**

###
spring.messages.encoding=UTF-8
spring.messages.basename=messages

### LOG Pattern Setting
logging.charset.console=UTF-8
logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss}}){faint} \
  %clr(${LOG_LEVEL_PATTERN:%5p}) \
  %clr([ %-20.20c){cyan} \
  - \
  %clr(%-20.20M ]){cyan} \
  %clr(:){faint} %m%n\
  ${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

## DB Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/project
spring.datasource.username=root
spring.datasource.password=1234
## MyBatis Setting
mybatis.config-location=classpath:mybatis/configuration/configuration.xml
mybatis.mapper-locations=classpath:mybatis/*.xml

## Multipart file
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.location=C:\\Users\\한민식\\Desktop\\software\\Web\\수업 실습(인텔리제이)\\Cookie Run Store\\src\\main\\resources\\files
## 한 파일당 최대 크기
#spring.servlet.multipart.max-file-size=20MB
## 한번의 요청 당 전체 파일 크기 (MAX)
#spring.servlet.multipart.max-request-size=100MB

### OAuth2.0 Client 설정
# google
spring.security.oauth2.client.registration.google.client-id=894170082103-69i74a31qphfcbmh0bduul12n7uffc2v.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email

### OAuth2.0 Client 설정
# kakao
# 인가코드를 발급받는 URI (카카오 로그인 창 띄우는 URI)
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-id=32d5e93cfbc09044990ff9921b3de270
spring.security.oauth2.client.registration.kakao.client-secret=h07GO0yU4fB8YefNu4Y3SAH35srZ7OcM
#spring.security.oauth2.client.registration.kakao.scope=

### OAuth2.0 Client 설정
# naver
# 인가코드를 발급받는 URI (네이버 로그인 창 띄우는 URI)
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# 인가 코드(Code)로 토큰을 발급받는 URI
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 토큰으로 로그인된 유저의 정보를 받아오는 URI(유저 정보를 조회하는 URI)
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 토큰으로 로그인된 유저의 정보를 받아올 때의 파라미터 METHOD
#spring.security.oauth2.client.provider.naver.user-info-authentication-method=
# 토큰으로 로그인된 유저의 정보를 받아올 대 유저의 정보가 존재하는 응답 body 부분
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# 내가 등록하는 OAuth2.0 인증서버의 정보
# 등록하는 인증 서버의 이름
spring.security.oauth2.client.registration.naver.client-name=naver
# 어떤 유형의 grant-type 인가(서버 사이드이기 때문에 authorization_code)
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# 스프링 시큐리티 기본 구성을 따를 때는 고정
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.client-id=1SylHzBqWhekpA1ttJvp
spring.security.oauth2.client.registration.naver.client-secret=18uLvKojdP
# 동의 항목을 작성
#spring.security.oauth2.client.registration.naver.scope=
